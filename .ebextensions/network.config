Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

  MySubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [ 0, !GetAZs !Ref "AWS::Region" ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MySubnet1

  MyElasticBeanstalkSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Elastic Beanstalk environment
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0  # Allow HTTP traffic from anywhere
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0  # Allow HTTPS traffic from anywhere
      Tags:
        - Key: Name
          Value: MyElasticBeanstalkSecurityGroup

  MyDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for RDS instance
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref MyElasticBeanstalkSecurityGroup  # Allow traffic only from Elastic Beanstalk instances
      Tags:
        - Key: Name
          Value: MyDBSecurityGroup

Outputs:
  VPCId:
    Value: !Ref MyVPC
  Subnet1Id:
    Value: !Ref MySubnet1
  ElasticBeanstalkSecurityGroupId:
    Value: !Ref MyElasticBeanstalkSecurityGroup
  DBSecurityGroupId:
    Value: !Ref MyDBSecurityGroup
